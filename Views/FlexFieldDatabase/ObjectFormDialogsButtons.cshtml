@using Microsoft.AspNetCore.Mvc.Localization

@model IViewLocalizer

<!-- Delete Object Dialog -->
<div class="modal fade" role="dialog" data-bind="modal: showConfirmObjectDeleteDialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">@Model["AreYouSure"]</h4>
            </div>
            <div class="modal-body">
                <p><span data-bind="if: !isTemplateMode()">@Model["AreYouSureYouWantToDeleteTheObject"]</span><span data-bind="if: isTemplateMode">@Model["AreYouSureYouWantToDeleteTheTemplate"]</span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-bind="click: deleteObject">@Model["Yes"]</button>
                <button type="button" class="btn btn-default" data-bind="click: closeConfirmObjectDeleteDialog">@Model["No"]</button>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/FlexFieldDatabase/FlexFieldFieldDialogs.cshtml")

@if(User.IsInRole(RoleNames.ImplementationStatusTracker))
{
    <!-- ko with: compareDialog -->
        @await Html.PartialAsync("~/Views/ImplementationStatus/CompareDialog.cshtml")
    <!-- /ko -->
}

<!-- Command Buttons -->
<button type="button" class="btn btn-primary gn-commandWidgetTopMargin" data-bind="click: save, disable: isLoading() || isReadonly()">
    <i class="glyphicon glyphicon-floppy-disk" data-bind="visible: !isLoading()"></i><i class="glyphicon glyphicon-refresh spinning" style="display: none" data-bind="visible: isLoading"></i> @Model["Save"]
</button>

<button type="button" class="btn btn-primary gn-commandWidgetTopMargin" data-bind="click: saveAndDistributeFields, disable: isLoading() || isReadonly(), visible: isTemplateMode" style="display: none">
    <i class="glyphicon glyphicon-floppy-disk" data-bind="visible: !isLoading()"></i><i class="glyphicon glyphicon-refresh spinning" style="display: none" data-bind="visible: isLoading"></i> @Model["SaveAndDistributeFields"]
</button>

@await Html.PartialAsync("~/Views/FlexFieldDatabase/FlexFieldAddButton.cshtml")

@if(User.IsInRole(RoleNames.ImplementationStatusTracker))
{
    <button type="button" class="btn btn-default gn-commandWidgetTopMargin" data-bind="click: openCompareDialog, disable: isLoading() || isReadonly() || isImplemented(), visible: !isTemplateMode() && id()">
        <span data-bind="visible: isImplemented()" style="display: none"><i class="glyphicon glyphicon-ok text-success"></i> @Model["IsImplemented"]</span>
        <span data-bind="visible: !isImplemented()" title="@Model["IsNotImplementedTooltip"]"><i class="glyphicon glyphicon-remove text-danger"></i> @Model["MarkAsImplemented"]</span>
    </button>
}